// Esquema actualizado para NutryHome con todas las variables del template
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo para campañas outbound
model Campaign {
  id          String   @id @default(cuid())
  nombre      String
  descripcion String?
  estado      CampaignStatus @default(DRAFT)
  fechaInicio DateTime?
  fechaFin    DateTime?
  tipo        String   @default("verificacion_stock") // Tipo de campaña
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  batches     Batch[]
  createdBy   User     @relation("CampaignCreator", fields: [createdById], references: [id])
  createdById String

  @@map("campaigns")
}

// Modelo para batches de llamadas
model Batch {
  id          String   @id @default(cuid())
  nombre      String
  campaignId  String
  estado      BatchStatus @default(PENDING)
  totalCalls  Int      @default(0)
  completedCalls Int   @default(0)
  failedCalls Int      @default(0)
  
  // Variables específicas del template Excel
  nombre_contacto      String?  // Nombre del cuidador/contacto
  nombre_paciente      String?  // Nombre completo del paciente
  phone_number         String?  // Número de teléfono
  domicilio_actual     String?  // Dirección del paciente
  localidad            String?  // Localidad del paciente
  delegacion           String?  // Delegación/región
  fecha_envio          DateTime? // Fecha de envío programado
  
  // Productos y cantidades (hasta 5 productos)
  producto1            String?
  cantidad1            String?
  producto2            String?
  cantidad2            String?
  producto3            String?
  cantidad3            String?
  producto4            String?
  cantidad4            String?
  producto5            String?
  cantidad5            String?
  
  observaciones        String?  // Notas sobre el estado del paciente
  prioridad            Priority @default(MEDIA)
  estado_pedido        PedidoStatus @default(PENDIENTE)
  
  // Campo JSON flexible para variables adicionales
  variables            Json?    // Variables extra que no están en el esquema
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  campaign    Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  contacts   Contact[]
  outboundCalls OutboundCall[]

  @@map("batches")
}

// Modelo para contactos específicos del batch
model Contact {
  id          String   @id @default(cuid())
  batchId     String
  
  // Variables específicas del template Excel
  nombre_contacto      String?  // Nombre del cuidador/contacto
  nombre_paciente      String?  // Nombre completo del paciente
  phone_number         String?  // Número de teléfono
  domicilio_actual     String?  // Dirección del paciente
  localidad            String?  // Localidad del paciente
  delegacion           String?  // Delegación/región
  fecha_envio          DateTime? // Fecha de envío programado
  
  // Productos y cantidades (hasta 5 productos)
  producto1            String?
  cantidad1            String?
  producto2            String?
  cantidad2            String?
  producto3            String?
  cantidad3            String?
  producto4            String?
  cantidad4            String?
  producto5            String?
  cantidad5            String?
  
  observaciones        String?  // Notas sobre el estado del paciente
  prioridad            Priority @default(MEDIA)
  estado_pedido        PedidoStatus @default(PENDIENTE)
  
  // Estado de la llamada
  estado_llamada       LlamadaStatus @default(PENDIENTE)
  resultado_llamada    String?
  fecha_llamada        DateTime?
  duracion_llamada     Int?     // Duración en segundos
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  batch       Batch    @relation(fields: [batchId], references: [id], onDelete: Cascade)
  outboundCalls OutboundCall[]

  @@map("contacts")
}

// Modelo para llamadas outbound
model OutboundCall {
  id          String   @id @default(cuid())
  batchId     String
  contactId   String?
  telefono    String
  nombre      String?
  estado      OutboundCallStatus @default(PENDING)
  intentos    Int      @default(0)
  maxIntentos Int      @default(3)
  fechaProgramada DateTime?
  fechaEjecutada DateTime?
  resultado   OutboundCallResult?
  notas       String?
  duracion    Int?     // Duración en segundos
  
  // Variables dinámicas específicas del contacto
  variables   Json?    // Variables específicas de este contacto
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relación con Call (si se convierte en llamada real)
  callId      String?  @unique
  call        Call?    @relation(fields: [callId], references: [id])

  // Relaciones
  batch       Batch    @relation(fields: [batchId], references: [id], onDelete: Cascade)
  contact     Contact? @relation(fields: [contactId], references: [id])

  @@map("outbound_calls")
}

// Modelo principal para las llamadas
model Call {
  id              String   @id @default(cuid())
  callId          String   @unique // ID único de ElevenLabs
  fecha           DateTime @default(now())
  telefono        String
  duracion        Int      // Duración en segundos
  transcript      String   @db.Text
  dataCollection  Json     // Datos adicionales de ElevenLabs
  criteriaResults Json     // Resultados de criterios evaluados
  status          CallStatus @default(ACTIVE)
  tipo            CallType @default(INBOUND)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relaciones
  derivations     Derivation[]
  complaints      Complaint[]
  outboundCall    OutboundCall?

  @@map("calls")
}

// Modelo para derivaciones
model Derivation {
  id          String   @id @default(cuid())
  callId      String
  motivo      String
  descripcion String?
  prioridad   Priority @default(MEDIA)
  createdAt   DateTime @default(now())

  call        Call     @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("derivations")
}

// Modelo para reclamos
model Complaint {
  id          String   @id @default(cuid())
  callId      String
  tipo        ComplaintType
  descripcion String
  severidad   Severity @default(MEDIA)
  resuelto    Boolean  @default(false)
  createdAt   DateTime @default(now())
  resueltoAt  DateTime?

  call        Call     @relation(fields: [callId], references: [id], onDelete: Cascade)

  @@map("complaints")
}

// Modelo para usuarios del sistema
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  nombre    String
  apellido  String
  rol       UserRole @default(AGENTE)
  activo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdCampaigns Campaign[] @relation("CampaignCreator")

  @@map("users")
}

// Enums actualizados
enum CallStatus {
  ACTIVE
  ARCHIVED
  DELETED
}

enum CallType {
  INBOUND
  OUTBOUND
}

enum CampaignStatus {
  DRAFT
  ACTIVE
  PAUSED
  COMPLETED
  CANCELLED
}

enum BatchStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
}

enum OutboundCallStatus {
  PENDING
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELLED
}

enum OutboundCallResult {
  ANSWERED
  NO_ANSWER
  BUSY
  INVALID_NUMBER
  VOICEMAIL
  HANGUP
  ERROR
}

enum LlamadaStatus {
  PENDIENTE
  EN_PROGRESO
  COMPLETADA
  FALLIDA
  CANCELADA
}

enum PedidoStatus {
  PENDIENTE
  ENVIADO
  ENTREGADO
  CANCELADO
}

enum Priority {
  BAJA
  MEDIA
  ALTA
  CRITICA
}

enum ComplaintType {
  CALIDAD
  SERVICIO
  TECNICO
  FACTURACION
  OTRO
}

enum Severity {
  BAJA
  MEDIA
  ALTA
  CRITICA
}

enum UserRole {
  ADMIN
  SUPERVISOR
  AGENTE
  ANALISTA
}
